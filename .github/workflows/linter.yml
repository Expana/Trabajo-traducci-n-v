name: Lint Check
on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, edited, reopened]
jobs:
  pre-ci:
    name: pre-ci
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.export-changes.outputs.src }}
      utils: ${{ steps.export-changes.outputs.utils }}
      docs: ${{ steps.export-changes.outputs.docs }}

    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            be-src:
              - 'src/*.js'
            be-utils:
              - 'utils/*.js'
            docs:
              - 'docs/*.md'

      - name: Export changes
        id: export-changes
        run: |
          echo "docs=${{ steps.filter.outputs.docs }}" >> $GITHUB_OUTPUT
          echo "src=${{ steps.filter.outputs.be-src }}" >> $GITHUB_OUTPUT
          echo "utils=${{ steps.filter.outputs.be-utils }}" >> $GITHUB_OUTPUT

  check-docs:
    needs: [pre-ci]
    runs-on: ubuntu-latest
    if: needs.pre-ci.outputs.docs == 'true'
    steps:
      - name: Create comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GTCT_SECRET }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
               body: 'ðŸ‘‹ Hola @' + context.payload.sender.login + '. Muchas gracias por tu aportaciÃ³n con la para **Tweet CLI** nos es de mucha ayuda! Que tengas un buen dÃ­aâœ¨'
            })

  lint-src:
    needs: [pre-ci]
    runs-on: ubuntu-latest
    if: needs.pre-ci.outputs.src == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Dependencies
        run: npm install

      - name: check-src-lint
        run: npm run lint-src

  lint-utils:
    needs: [pre-ci]
    runs-on: ubuntu-latest
    if: needs.pre-ci.outputs.utils == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Check Utils Lint
        run: npm run lint-utils

  on-failure:
    permissions: write-all
    name: on-failure
    runs-on: ubuntu-latest
    needs: [lint-src, lint-utils]
    if: ${{ always() && contains(needs.*.result, 'failure') && github.ref != 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v3
      - name: Save the PR number in an artifact
        shell: bash
        env:
          PR_NUM: ${{ github.event.number }}
        run: echo $PR_NUM > pr_num.txt

      - name: Upload the PR number
        uses: actions/upload-artifact@v3
        with:
          name: pr_num
          path: ./pr_num.txt

      - name: Add Lint Error Label
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ github.token }}
          labels: lint-error
          type: add
  
  # remove-label:
  #   runs-on: ubuntu-latest
  #   name: remove label
  #   needs: [on-failure]
  #   if: ${{ always() && contains(needs.*.result, 'skipped') && github.ref != 'refs/heads/master' }}
  #   steps:
  #     - name: Remove Lint Error Label
  #       uses: buildsville/add-remove-label@v2.0.0
  #       with:
  #         token: ${{ github.token }}
  #         labels: lint-error
  #         type: remove
